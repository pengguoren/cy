class resource{
    private  int  number;
    private Lock lock = new ReentrantLock();
    private Condition condition = lock.newCondition();


    public void increment(){
        lock.lock();
        try {
            while(number != 0){
                condition.await();
            }
            number++;
            condition.signalAll();
            System.out.println(Thread.currentThread().getName()+"-------"+number);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } finally {
            lock.unlock();
        }
    }
    public void decrement(){
        lock.lock();
        try{
            while(number == 0){
                    condition.await();
            }
            number--;
            condition.signalAll();
            System.out.println(Thread.currentThread().getName()+"-------"+number);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } finally {
        lock.unlock();
        }
    }
}
//生产者消费者
/**
*1 线程 操作 资源类
*2 判断 干活 通知
*3 防止虚假唤醒机制
*/
public class Main {

    public static void main(String[] args) {
        resource resource = new resource();
        for (int i=1;i<=7;i++) {
            new Thread(()->{
                    resource.increment();
            },String.valueOf(i)).start();
        }
        for (int i=1;i<=7;i++){
            new Thread(()->{
                    resource.decrement();
            },String.valueOf(i)).start();
        }

    }
}